/*
 * Simple Inventory API
 *
 * This is a simple API
 *
 * OpenAPI spec version: 1.1.0
 * Contact: you@your-company.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AdminsApiController : ControllerBase
    { 
        /// <summary>
        /// Adds an inventory item.
        /// </summary>
        /// <remarks>Adds an item to the system</remarks>
        /// <param name="body">Inventory item to add</param>
        /// <response code="201">item created</response>
        /// <response code="400">invalid input, object invalid</response>
        /// <response code="409">an existing item already exists</response>
        [HttpPost]
        [Route("/Corey_Projects/424demo/1.0.0/inventory")]
        [ValidateModelState]
        [SwaggerOperation("AddInventory")]
        public virtual IActionResult AddInventory([FromBody]InventoryItem body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Deletes an item.
        /// </summary>
        /// <param name="itemId">Item id to delete</param>
        /// <param name="apiKey"></param>
        /// <response code="201">item deleted</response>
        /// <response code="400">Invalid ID supplied</response>
        /// <response code="404">this item does not exist</response>
        [HttpDelete]
        [Route("/Corey_Projects/424demo/1.0.0/inventory")]
        [ValidateModelState]
        [SwaggerOperation("DeletesAnItemFromTheSystem")]
        public virtual IActionResult DeletesAnItemFromTheSystem([FromRoute][Required]long? itemId, [FromHeader]string apiKey)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }
    }
}
